<script type="text/javascript">

/*********************
* CATEGORIES
********************/
var Category = Ext.data.Record.create([
	{name: "ID", type: "string"},                               	
	{name: "DESCRIPTION", type: "string"}
]);

var category_store = new Ext.data.Store({ 
	url: "<?= $this->baseUrl(); ?>/projects/usercats",	 	
	sortInfo: {
		field: 'DESCRIPTION',
		direction: 'ASC'
	},
	reader: new Ext.data.JsonReader({ totalProperty: "results", root: "data", id: "ID" }, Category), 
	autoLoad: true 
});

function formatDeleteCatLink(value, metaData, record, rowIndex, colIndex, store){		
    return '<a href="javascript:deleteCategory();" title="delete" style=""><img src="<?= $this->baseUrl() ?>/html/images/delete.png" /></a>';	            
}

var category_cm = new Ext.grid.ColumnModel([
	{ id: "id", header: "", dataIndex: "ID", width: 25, menuDisabled: true, hideable: false, renderer: formatDeleteCatLink },  
	{ id: "DESCRIPTION", header: "Description", dataIndex: "DESCRIPTION", width: 200, editor: new Ext.form.TextField({ allowBlank: false }) }         
]);

category_cm.defaultSortable = true;
                                               
var category_grid = new Ext.ux.EasyEditorGridPanel({
                                           		
	store: category_store,
	cm: category_cm,    
	clicksToEdit:1,
	autoExpandColumn: "DESCRIPTION",
	frame:false,    
	stripeRows: true,
	selModel: new Ext.grid.RowSelectionModel( {singleSelect:true} ),
	loadMask: true,

	tbar: [
			{ 
				text: "New Category",
				icon: "<?= $this->baseUrl() ?>/html/images/add.png",
				handler : function(){
					category_grid.addNewRow({ rec : new Category({ ID: "", DESCRIPTION: "" }) });
				}
			},{
				text: "Save Changes",
				icon: "<?= $this->baseUrl() ?>/html/images/disk.png",
				handler : function(){
					category_grid.postGrid( { url: "<?= $this->baseUrl(); ?>/projects/savecat", updatePK : true });
				}              
			}
		]
});

function deleteCategory(){

	Ext.MessageBox.confirm("Confirm", "Are you sure you want to delete this item?", function(btn){ 
		if ( btn == "yes"){
			category_grid.deleteSelectedRows( { url: "<?= $this->baseUrl(); ?>/projects/deletecat" } );
		}
	});
	
}

function editCategories(){
	category_window.show();	
	category_window.center();
}

var tab_panel = new Ext.TabPanel({
	
	activeTab:0,                                                	
	deferredRender: true,	
	frame: false,
	plain: true,
	
				                        
	items:	[   
	     		{
		      		title: "Categories",
		      		layout: "fit",		      		
		      		items: category_grid		      		
	      		}	                                                                            	                        
			]
		                                        
});

var settings_panel = new Ext.Panel({

	title: 'Settings',
	region: 'center',
	margins:'5',
	layout: 'fit',
	bodyStyle: "padding: 10px;",
	items: tab_panel,
	tbar: [
			{ 
				text: "Return To Main Screen",
				icon: "<?= $this->baseUrl() ?>/html/images/house.png",
				handler : function(){
					document.location.href="<?= $this->baseUrl() ?>";
				}
			}
		]
	    		
});

Ext.onReady(function() {

	var viewport = new Ext.Viewport({
        
        layout:'border',
        style:'background: #DFDFDF;',
        items:	[ 
             		new Ext.BoxComponent({ 
                     	region:'north',
                     	el: 'header',
                     	height: 30
                 	}),                 	             		 
             		settings_panel,             		
             		new Ext.BoxComponent({ 
                     	region:'south',
                     	el: 'footer',
                     	height: 45
                 	})
             	]
             
   	});	
		
});


</script>