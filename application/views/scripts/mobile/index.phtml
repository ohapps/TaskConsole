<script type="text/javascript">


var App = new Ext.Application({
	
	name : 'TaskConsole',	
	useLoadMask : true,	
	launch : function () {			

		TaskConsole.views.mainToolbar = new Ext.Toolbar({
			id: 'mainToolbar',
			title: 'Task Console',
			items: 	[
				{
					xtype: 'button',
					text: 'logout'
				}
			]
				
		});
		
		Ext.regModel('Task', {
			fields: [
						{name: 'DESCRIPTION', type: 'string'},
						{name: 'PROJECT', type: 'string'},
						{name: 'PRIORITY', type: 'string'},
						{name: 'CATEGORIES', type: 'string'}
					]
		});
			
		TaskConsole.taskQueueStore = new Ext.data.Store({
			model: 'Task',
			getGroupString : function(record) {
		        return record.get('PRIORITY');
		    },
		    pageSize: 5,
		    clearOnPageLoad: false,			
			proxy: {
				type: 'ajax',
				url: '<?= $this->baseUrl(); ?>/tasks/user-tasks/status/queue',
				extraParams: { start: 0, limit: 5, priorities: "1,2,3"  },
			    reader: {
			    	type: 'json',
			        root: 'data'
			    }
			},
		    autoLoad: true
		});

		TaskConsole.taskQueueList = new Ext.List({
		    fullscreen: true,		    
		    itemTpl : '<div style="font-weight: bold;">{PROJECT}</div>{DESCRIPTION}',
		    grouped : true,		    		    
		    store: TaskConsole.taskQueueStore,
		    plugins: [
		  		{
                	ptype: 'listpaging',
                	autoPaging: false
            	}, {
                	ptype: 'pullrefresh'
            	}
            ]
		});

		TaskConsole.taskPendingStore = new Ext.data.Store({
			model: 'Task',
			getGroupString : function(record) {
		        return record.get('PRIORITY');
		    },			
			proxy: {
				type: 'ajax',
				url: '<?= $this->baseUrl(); ?>/tasks/user-tasks/status/pending',
				extraParams: { start: 0, limit: 50, priorities: "1,2,3"  },
			    reader: {
			    	type: 'json',
			        root: 'data'
			    }
			},
		    autoLoad: true
		});

		TaskConsole.taskPendingList = new Ext.List({
		    fullscreen: true,		    
		    itemTpl : '<div style="font-weight: bold;">{PROJECT}</div>{DESCRIPTION}',
		    grouped : true,		    		    
		    store: TaskConsole.taskPendingStore
		});
		
		/*	
		TaskConsole.taskList = new Ext.NestedList({
			fullscreen: true,
			title: 'Tasks',
			displayField: 'text',
			store: TaskConsole.taskStore,
			getDetailCard: function(item,parent){
			 	var itemData = item.attributes.record.data,
		        parentData = parent.attributes.record.data,
				detailCard = new Ext.Panel({
					scroll: 'vertical',
					styleHtmlContent: true,
					tpl: ["<h2>{text}</h2>","{priority}"]
				});
			 	detailCard.update(itemData);
		        this.backButton.setText(parentData.text);
				return detailCard;
			}
		});
		*/

		TaskConsole.views.taskTabs = new Ext.TabPanel({

			fullscreen: true,
			ui: 'light',
			items: [
				{
					title: "Queue",
					items: TaskConsole.taskQueueList
				},{
					title: "Pending",
					items: TaskConsole.taskPendingList
				}
			]
										
		});		
	
		TaskConsole.views.viewport = new Ext.TabPanel({
			fullscreen: true,			
			layout: 'card',
			cardAnimation: 'slide',
			tabBar: {
		        dock: 'bottom',
		        ui: 'light',
		        layout: {
		            pack: 'center'
		        }
		    },
			dockedItems: [ TaskConsole.views.mainToolbar ],
			items: [
				{
			        title: 'Tasks',
			        badgeText: '2',
			        items: TaskConsole.views.taskTabs,		        
			        iconCls: 'action',
			        cls: 'card card5'
			    },			    
			    {
			        title: 'Notes',
			        html: 'notes',
			        iconCls: 'compose',
			        cls: 'card card3'
			    }
			]
		});
	
	}	
});


</script>